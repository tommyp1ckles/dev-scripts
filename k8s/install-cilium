#!/bin/bash

set -o pipefail

controller=false
debug=false
start_time=$(date '+%s')

while getopts "ad" arg; do
    case "$arg" in    
      a) controller=true ;;
      d) debug=true ;;
    esac
done

echo "Controller:	${controller}"
echo "Agent:		true"
echo "Debug:		${debug}"

project_dir=$HOME/go/src/github.com/cilium/cilium
install_dir=${project_dir}/install/kubernetes

set -e
set -o pipefail
export DOCKER_REGISTRY=localhost:5000
export DOCKER_FLAGS=--push 
export DOCKER_IMAGE_TAG=latest

function build_cilium {
    (cd ${project_dir} && make dev-docker-image)
}

function build_cilium_operator {
    (cd ${project_dir} && make docker-operator-generic-image)
}

function cilium-helm-install {
    if [ -z "${1}" ]; then
        echo "tag not provided"
        return
    fi
    ciliumVersion=${1}
    cd ${install_dir}
    CILIUM_CI_TAG="${1}"
    helm template cilium ./cilium \
      --namespace kube-system \
      --set prometheus.enabled=true \
      --set operator.prometheus.enabled=true \
      --set debug.enabled=${debug} \
      --set hubble.enabled=true \
      --set image.repository=localhost:5000/cilium/cilium-dev \
      --set image.tag=$CILIUM_CI_TAG \
      --set operator.image.repository=localhost:5000/cilium/operator \
      --set operator.image.suffix="" \
      --set securityContext.privileged=true \
      --set operator.image.tag=$CILIUM_CI_TAG | tee /tmp/cilium.yaml
    kubectl apply -f /tmp/cilium.yaml
}
if [[ "${controller}" ]]; then
	echo "Buildig operator"
	build_cilium_operator
fi

build_cilium
cilium-helm-install latest
echo "Rolling out Cilium DaemonSet..."
kubectl rollout restart ds cilium -n kube-system

echo "Waiting to become stable..."
kubectl wait --for condition=Ready pods -l=k8s-app=cilium
end_time=$(date '+%s')

echo "Storing build data into metrics.db"
cpus=$(nproc)
memo=$(free -m | grep "Mem:" | awk '{print $2}')
sqlite ~/.metrics.db "insert into builds (start_time, end_time, cpus, memory) values (${start_time}, ${end_time}, ${cpus}, ${memo});"
echo "done"
